rules = [
  DisableSyntax,
  ExplicitResultTypes,
  LeakingImplicitClassVal,
  OrganizeImports,
  RemoveUnused,
  NoValInForComprehension,
  RedundantSyntax,
  NoAutoTupling
]

DisableSyntax.noVars = true
DisableSyntax.noThrows = true
DisableSyntax.noNulls = true
DisableSyntax.noReturns = true
DisableSyntax.noWhileLoops = true
DisableSyntax.noAsInstanceOf = true
DisableSyntax.noIsInstanceOf = true
DisableSyntax.noXml = true
# DisableSyntax.noDefaultArgs = true
DisableSyntax.noFinalVal = true
DisableSyntax.noFinalize = true
DisableSyntax.noValPatterns = true
# DisableSyntax.noUniversalEquality = false
# DisableSyntax.noUniversalEqualityMessage = == and != are unsafe since they allow comparing two unrelated types

ExplicitResultTypes.memberKind = [
  Def,
  Val,
  Var
]

LeakingImplicitClassVal.enabled = true

OrganizeImports.expandRelative = true
OrganizeImports.groupedImports = Explode
OrganizeImports.groups = [
  "scala.",
  "java.",
  "*"
]
OrganizeImports.targetDialect = Scala3

RemoveUnused.imports = true
RemoveUnused.params = true
RemoveUnused.patternvars = true


triggered.rules = [
  DisableSyntax,
  ExplicitResultTypes,
  LeakingImplicitClassVal,
  OrganizeImports,
  RemoveUnused,
  NoValInForComprehension,
  RedundantSyntax,
  NoAutoTupling
]

lint.error = [
  DisableSyntax,
  ExplicitResultTypes,
  LeakingImplicitClassVal,
  OrganizeImports,
  RemoveUnused,
  NoValInForComprehension,
  RedundantSyntax,
  NoAutoTupling
]
